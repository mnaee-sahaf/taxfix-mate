
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://riwyowmbpwkqgjkbdxkr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJpd3lvd21icHdrcWdqa2JkeGtyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE5OTc5MTYsImV4cCI6MjA1NzU3MzkxNn0.sNZ2exqRF4_XR8rOUZTEBhTqcjOVxCeYe8Yno361o6c";
const SITE_URL = "http://localhost:8080";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY, 
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true,
      flowType: 'pkce',
      // Correctly configure auth options
      storage: {
        getItem: (key) => {
          try {
            const value = localStorage.getItem(key);
            return value ? JSON.parse(value) : null;
          } catch (error) {
            console.error('Error getting item from localStorage:', error);
            return null;
          }
        },
        setItem: (key, value) => {
          try {
            localStorage.setItem(key, JSON.stringify(value));
          } catch (error) {
            console.error('Error setting item in localStorage:', error);
          }
        },
        removeItem: (key) => {
          try {
            localStorage.removeItem(key);
          } catch (error) {
            console.error('Error removing item from localStorage:', error);
          }
        }
      }
    },
    global: {
      headers: {
        'x-application-name': 'taxfix',
      },
    },
  }
);

// Initialize the session
supabase.auth.setSession({
  access_token: '',
  refresh_token: '',
}).then(() => {
  console.log('Auth session initialized');
});
  
// Listen for auth state changes
supabase.auth.onAuthStateChange((event, session) => {
  console.log('Auth state changed:', event, session);
});
